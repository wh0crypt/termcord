name: Build, Format & Test (dev)

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

env:
  CARGO_TERM_COLOR: always
  GIT_COMMITTER_NAME: "GitHub Actions"
  GIT_COMMITTER_EMAIL: "actions@github.com"

jobs:
  build_and_test:
    name: TermCord Dev - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}

      - name: Format code
        run: cargo fmt

      - name: Run Clippy (strict)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Commit formatted code
        run: |
          git config user.name "${GIT_COMMITTER_NAME}"
          git config user.email "${GIT_COMMITTER_EMAIL}"

          FILES=$(cargo fmt -- --list-different)
          if [ -n "$FILES" ]; then
            git add $FILES
            git commit -m "style: apply rustfmt formatting"
            git push origin dev
          else
            echo "No files changed by rustfmt"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build project
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose
